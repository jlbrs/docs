{
  "$schema": "https://mintlify.com/docs.json",
  "theme": "palm",
  "name": "Dfns documentation",
  "colors": {
    "primary": "#713DFF",
    "light": "#C6B1FF",
    "dark": "#713DFF"
  },
  "description": "Dfns documentation",
  "logo": {
    "light": "/images/logo/dfnsdocs.png",
    "dark": "/images/logo/dfnsdocs.png"
  },
  "favicon": {
    "light": "favicon.png",
    "dark": "favicon.png"
  },
  "thumbnails": {
    "appearance": "light",
    "background": "#f4f5fa"
  },
  "styling": {
    "eyebrows": "breadcrumbs"
  },
  "icons": {
    "library": "fontawesome"
  },
  "appearance": {
    "default": "system",
    "strict": false
  },
  "navbar": {
    "links": [
      {
        "label": "Blog",
        "href": "https://www.dfns.co/blog",
        "icon": "newspaper"
      },
      {
        "label": "Support",
        "href": "https://support.dfns.co",
        "icon": "life-ring"
      },
      {
        "label": "Dashboard",
        "href": "https://app.dfns.io",
        "icon": "house"
      }
    ],
    "primary": {
      "type": "button",
      "label": "Get started",
      "href": "https://app.dfns.io/get-started"
    }
  },
  "navigation": {
    "global": {
      "anchors": []
    },
    "tabs": [
      {
        "tab": "Documentation",
        "icon": "book-open",
        "pages": [
          {
            "group": "Introduction",
            "icon": "wand-magic-sparkles",
            "pages": [
              "index",
              "platform-overview",
              "core-concepts/architecture",
              "core-concepts/how-mpc-wallets-work",
              "core-concepts/dfns-security-model",
              {
                "group": "Quickstart Guide",
                "icon": "rocket",
                "pages": [
                  "introduction/quickstart/index",
                  "introduction/quickstart/1-create-your-organization-and-invite-employees",
                  "introduction/quickstart/2-define-and-assign-permissions",
                  "introduction/quickstart/3-create-policies",
                  "introduction/quickstart/4-using-the-dashboard-create-your-first-wallet",
                  "introduction/quickstart/5-start-building-login-and-create-a-wallet-via-api",
                  "introduction/quickstart/6-non-custody-1-2-dfns-api-using-a-service-account",
                  "introduction/quickstart/7-non-custody-2-2-customer-login-and-delegated-wallets"
                ]
              }
            ]
          },
          {
            "group": "Core Concepts",
            "icon": "layer-group",
            "pages": [
              "core-concepts/wallets-and-keys",
              "core-concepts/non-custodial-wallets",
              "core-concepts/permissions",
              "core-concepts/policies",
              "core-concepts/passkeys"
            ]
          },
          {
            "group": "Platform Features",
            "icon": "cubes",
            "pages": [
              "features/index",
              "features/transactions",
              "features/staking",
              "features/swaps",
              "features/fee-sponsors",
              "features/exchanges",
              "features/aml-kyt",
              "features/travel-rule",
              "features/fiat-on-offboarding"
            ]
          },
          {
            "group": "Networks",
            "icon": "network-wired",
            "pages": [
              "networks/index",
              "networks/supported-assets",
              "networks/supported-key-formats",
              {
                "group": "Networks specificities",
                "pages": [
                  "networks/canton-validators"
                ]
              }
            ]
          },
          {
            "group": "Guides",
            "icon": "compass",
            "pages": [
              "guides/transferring-assets",
              "guides/using-networks-testnets",
              "guides/dashboard-videos",
              "guides/permission-based-access-control",
              "guides/managing-users-and-roles",
              "guides/user-account-recovery",
              "guides/creating-policies",
              "guides/approving-transactions",
              "guides/email-approval-requests-with-zapier",
              "guides/registering-a-new-passkey-credential",
              "guides/onboarding-a-new-device",
              "guides/storing-webauthn-credentials-in-password-managers",
              {
                "group": "3ʳᵈ-party integrations",
                "icon": "circles-overlap",
                "pages": [
                  {
                    "group": "Exchanges",
                    "pages": [
                      "integrations/exchanges/kraken-setup",
                      "integrations/exchanges/binance-setup",
                      "integrations/exchanges/coinbase-prime-setup"
                    ]
                  },
                  {
                    "group": "AML / KYT",
                    "pages": [
                      "integrations/aml-kyt/chainalysis"
                    ]
                  },
                  {
                    "group": "Travel Rule",
                    "pages": [
                      "integrations/travel-rule/notabene"
                    ]
                  }
                ]
              },
              {
                "group": "Developers Guides",
                "icon": "code",
                "pages": [
                  "developers/index",
                  "developers/webhooks",
                  "developers/guides/wallet-delegation",
                  "developers/guides/user-action-signature",
                  "developers/guides/generate-a-key-pair",
                  "developers/guides/user-credentials",
                  "developers/guides/access-token-credentials",
                  "developers/guides/signing-requests",
                  "developers/guides/passkey-settings-migration-guide",
                  "developers/guides/keys-and-multichain-migration-guide",
                  "developers/guides/applications-deprecation"
                ]
              }
            ]
          },
          {
            "group": "Advanced",
            "icon": "flask-vial",
            "pages": [
              "advanced/credentials",
              "advanced/delegated-signing",
              "advanced/interoperability",
              "advanced/account-abstraction-on-evms",
              {
                "group": "Deployment models",
                "pages": [
                  "advanced/deployment-models/index",
                  "advanced/deployment-models/on-premise-deployment",
                  "advanced/deployment-models/hsm"
                ]
              }
            ]
          },
          "faq"
        ]
      },
      {
        "tab": "API reference",
        "icon": "code",
        "pages": [
          "api-reference/index",
          "api-reference/environments",
          "api-reference/core-objects",
          "api-reference/error-codes",
          "api-reference/idempotency",
          "api-reference/rate-limits",
          "api-reference/postman-collection",
          {
            "group": "API Authorization",
            "icon": "key",
            "pages": [
              "api-reference/auth/index",
              {
                "group": "Authentication",
                "pages": [
                  "api-reference/auth/login-flows",
                  "post /auth/login/code",
                  "post /auth/login/init",
                  "post /auth/login",
                  "post /auth/login/delegated",
                  "post /auth/login/social",
                  "put /auth/logout"
                ]
              },
              {
                "group": "User Action Signature",
                "pages": [
                  "api-reference/auth/signing-flows",
                  "post /auth/action/init",
                  "post /auth/action",
                  "get /auth/action/logs",
                  "get /auth/action/logs/{id}"
                ]
              }
            ]
          },
          {
            "group": "Identity & Access Management",
        "icon": "user",
            "pages": [
              {
                "group": "Registration",
                "pages": [
                  "api-reference/auth/registration-flows",
                  "post /auth/registration/init",
                  "post /auth/registration/delegated",
                  "post /auth/registration/social",
                  "post /auth/registration",
                  "post /auth/registration/enduser",
                  "put /auth/registration/code"
                ]
              },
              {
                "group": "Users management",
                "pages": [
                  "api-reference/auth/users",
                  "get /auth/users",
                  "post /auth/users",
                  "get /auth/users/{userId}",
                  "put /auth/users/{userId}/activate",
                  "put /auth/users/{userId}/deactivate",
                  "delete /auth/users/{userId}"
                ]
              },
              {
                "group": "Permissions",
                "pages": [
                  "get /permissions",
                  "post /permissions",
                  "get /permissions/{permissionId}",
                  "put /permissions/{permissionId}",
                  "put /permissions/{permissionId}/archive",
                  "get /permissions/{permissionId}/assignments",
                  "post /permissions/{permissionId}/assignments",
                  "delete /permissions/{permissionId}/assignments/{assignmentId}"
                ]
              },
              {
                "group": "Credentials",
                "pages": [
                  "api-reference/auth/credentials",
                  "api-reference/auth/credentials-data",
                  "get /auth/credentials",
                  "post /auth/credentials/init",
                  "post /auth/credentials",
                  "post /auth/credentials/code/init",
                  "post /auth/credentials/code/verify",
                  "put /auth/credentials/activate",
                  "put /auth/credentials/deactivate",
                  "post /auth/credentials/code"
                ]
              },
              {
                "group": "Personal Access Tokens",
                "pages": [
                  "api-reference/auth/personal-access-tokens",
                  "get /auth/pats",
                  "post /auth/pats",
                  "get /auth/pats/{tokenId}",
                  "put /auth/pats/{tokenId}",
                  "put /auth/pats/{tokenId}/activate",
                  "put /auth/pats/{tokenId}/deactivate",
                  "delete /auth/pats/{tokenId}"
                ]
              },
              {
                "group": "Account recovery",
                "pages": [
                  "api-reference/auth/account-recovery",
                  "post /auth/recover/user/code",
                  "post /auth/recover/user/init",
                  "post /auth/recover/user/delegated",
                  "post /auth/recover/user"
                ]
              },
              {
                "group": "Service Accounts",
                "pages": [
                  "api-reference/auth/service-accounts",
                  "get /auth/service-accounts",
                  "post /auth/service-accounts",
                  "get /auth/service-accounts/{serviceAccountId}",
                  "put /auth/service-accounts/{serviceAccountId}",
                  "put /auth/service-accounts/{serviceAccountId}/activate",
                  "put /auth/service-accounts/{serviceAccountId}/deactivate",
                  "delete /auth/service-accounts/{serviceAccountId}"
                ]
              }
            ]
          },
          {
            "group": "Wallets & Transactions",
            "icon": "globe",
            "pages": [
              {
                "group": "Wallets",
                "pages": [
                  "api-reference/wallets/index",
                  "get /wallets",
                  "post /wallets",
                  "get /wallets/{walletId}",
                  "put /wallets/{walletId}",
                  "get /wallets/{walletId}/assets",
                  "get /wallets/{walletId}/history",
                  "get /wallets/{walletId}/nfts",
                  "get /wallets/all/history",
                  "post /wallets/import",
                  "post /wallets/{walletId}/delegate",
                  "post /wallets/{walletId}/export",
                  "get /wallets/{walletId}/signatures",
                  "get /wallets/{walletId}/signatures/{signatureId}",
                  {
                    "group": "Wallet Tags",
                    "pages": [
                      "api-reference/wallets/tags",
                      "put /wallets/{walletId}/tags",
                      "delete /wallets/{walletId}/tags"
                    ]
                  },
                  {
                    "group": "Canton Wallets",
                    "pages": [
                      "get /wallets/{walletId}/offers",
                      "get /wallets/{walletId}/offers/{offerId}",
                      "put /wallets/{walletId}/offers/{offerId}/accept",
                      "put /wallets/{walletId}/offers/{offerId}/reject",
                      {
                        "group": "Webhooks",
                        "pages": [
                          "webhook wallet.offer.accepted",
                          "webhook wallet.offer.received",
                          "webhook wallet.offer.rejected"
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "group": "Keys",
                "pages": [
                  "api-reference/keys",
                  "get /keys",
                  "post /keys",
                  "post /keys/{keyId}/delegate",
                  "get /keys/{keyId}",
                  "put /keys/{keyId}",
                  "delete /keys/{keyId}",
                  "post /keys/{keyId}/derive",
                  "post /keys/{keyId}/export",
                  "post /keys/import",
                  "get /keys/{keyId}/signatures",
                  "get /keys/{keyId}/signatures/{signatureId}"
                ]
              },
              {
                "group": "Transfers",
                "pages": [
                  "post /wallets/{walletId}/transfers",
                  "get /wallets/{walletId}/transfers",
                  "get /wallets/{walletId}/transfers/{transferId}",
                  {
                    "group": "Webhooks",
                    "pages": [
                      "webhook wallet.transfer.requested",
                      "webhook wallet.transfer.broadcasted",
                      "webhook wallet.transfer.confirmed",
                      "webhook wallet.transfer.failed",
                      "webhook wallet.transfer.rejected"
                    ]
                  }
                ]
              },
              {
                "group": "Raw Transactions",
                "pages": [
                  "api-reference/raw-transactions/index",
                  "get /wallets/{walletId}/transactions",
                  "get /wallets/{walletId}/transactions/{transactionId}",
                  "post /wallets/{walletId}/signatures",
                  "post /keys/{keyId}/signatures",
                  "post /wallets/{walletId}/transactions",
                  {
                    "group": "Transactions examples",
                    "pages": [
                      "api-reference/raw-transactions/algorand",
                      "api-reference/raw-transactions/aptos",
                      "api-reference/raw-transactions/bitcoin",
                      "api-reference/raw-transactions/cardano",
                      "api-reference/raw-transactions/cosmos",
                      "api-reference/raw-transactions/evm",
                      "api-reference/raw-transactions/iota",
                      "api-reference/raw-transactions/near",
                      "api-reference/raw-transactions/solana",
                      "api-reference/raw-transactions/stellar",
                      "api-reference/raw-transactions/substrate",
                      "api-reference/raw-transactions/sui",
                      "api-reference/raw-transactions/tezos",
                      "api-reference/raw-transactions/tron",
                      "api-reference/raw-transactions/ton",
                      "api-reference/raw-transactions/xrp"
                    ]
                  }
                ]
              },
              {
                "group": "Fee Sponsors",
                "pages": [
                  "get /fee-sponsors",
                  "post /fee-sponsors",
                  "get /fee-sponsors/{feeSponsorId}",
                  "put /fee-sponsors/{feeSponsorId}/activate",
                  "put /fee-sponsors/{feeSponsorId}/deactivate",
                  "delete /fee-sponsors/{feeSponsorId}",
                  "get /fee-sponsors/{feeSponsorId}/fees"
                ]
              },
              {
                "group": "Swaps",
                "pages": [
                  "get /swaps",
                  "get /swaps/quotes/{quoteId}",
                  "get /swaps/{swapId}",
                  "post /swaps",
                  "post /swaps/quotes"
                ]
              },
              {
                "group": "Staking",
                "pages": [
                  "get /staking/stakes",
                  "post /staking/stakes",
                  "get /staking/stakes/{stakeId}",
                  "get /staking/stakes/{stakeId}/actions",
                  "post /staking/stakes/{stakeId}/actions",
                  "get /staking/stakes/{stakeId}/rewards"
                ]
              },
              {
                "group": "Networks",
                "pages": [
                  "get /networks/fees",
                  "post /networks/read-contract",
                  {
                    "group": "Canton Validators",
                    "pages": [
                      "get /networks/{network}/validators",
                      "post /networks/{network}/validators",
                      "put /networks/{network}/validators/{validatorId}",
                      "delete /networks/{network}/validators/{validatorId}"
                    ]
                  }
                ]
              },
            
              {
                "group": "Exchanges",
                "pages": [
                  "get /exchanges",
                  "post /exchanges",
                  "get /exchanges/{exchangeId}",
                  "get /exchanges/{exchangeId}/accounts",
                  "get /exchanges/{exchangeId}/accounts/{accountId}/assets",
                  "get /exchanges/{exchangeId}/accounts/{accountId}/assets/{asset}/withdrawal-networks",
                  "post /exchanges/{exchangeId}/accounts/{accountId}/deposits",
                  "post /exchanges/{exchangeId}/accounts/{accountId}/withdrawals",
                  "delete /exchanges/{exchangeId}"
                ]
              }
            ]
          },
          {
            "group": "Management",
            "icon": "list-check",
            "pages": [
              {
                "group": "Policies",
                "pages": [
                  "api-reference/policies",
                  "get /v2/policies",
                  "post /v2/policies",
                  "get /v2/policies/{policyId}",
                  "put /v2/policies/{policyId}",
                  "delete /v2/policies/{policyId}"
                ]
              },
              {
                "group": "Approval management",
                "pages": [
                  "api-reference/policy-approvals",
                  "post /v2/policy-approvals/{approvalId}/decisions",
                  "get /v2/policy-approvals/{approvalId}",
                  "get /v2/policy-approvals"
                ]
              },
              {
                "group": "Agreements",
                "pages": [
                  "get /agreements/latest-unaccepted",
                  "post /agreements/{agreementId}/accept"
                ]
              }
            ]
          },
          {
            "group": "Webhooks",
            "icon": "webhook",
            "pages": [
              {
                "group": "Webhook Configuration",
                "pages": [
                  "api-reference/webhooks",
                  "get /webhooks",
                  "post /webhooks",
                  "get /webhooks/{webhookId}",
                  "put /webhooks/{webhookId}",
                  "delete /webhooks/{webhookId}",
                  "post /webhooks/{webhookId}/ping"
                ]
              },
              {
                "group": "Events History",
                "pages": [
                  "api-reference/webhook-events",
                  "get /webhooks/{webhookId}/events/{webhookEventId}",
                  "get /webhooks/{webhookId}/events"
                ]
              }
            ]
          }
        ],
        "openapi": "openapi.yaml"
      },
      {
        "tab": "SDK reference",
        "icon": "square-terminal",
        "pages": [
          "sdks/index",
          {
            "group": "Typescript",
            "pages": [
              "sdks/typescript/index",
              "sdks/typescript/development",
              "sdks/typescript/examples"
            ]
          },
          {
            "group": "Go",
            "tag": "Beta",
            "pages": [
              "sdks/go/index",
              "sdks/go/development",
              "sdks/go/examples"
            ]
          },
          {
            "group": "Flutter",
            "tag": "Beta",
            "pages": [
              "sdks/flutter/index",
              "sdks/flutter/development",
              "sdks/flutter/examples"
            ]
          },
          {
            "group": "Kotlin",
            "tag": "Beta",
            "pages": [
              "sdks/kotlin/index",
              "sdks/kotlin/development",
              "sdks/kotlin/examples"
            ]
          },
          {
            "group": "Swift",
            "tag": "Beta",
            "pages": [
              "sdks/swift/index",
              "sdks/swift/development",
              "sdks/swift/examples"
            ]
          },
          {
            "group": "Python",
            "pages": [
              "sdks/python/index"
            ]
          }
        ]
      },
      {
        "tab": "Change Log",
        "icon": "newspaper",
        "pages": [
          "changelog"
        ]
      }
    ]
  },
  "redirects": [
  {
    "source": "/source/path",
    "destination": "/destination/path"
  }
],
  "footer": {
    "socials": {
      "x": "https://x.com/dfnsHQ",
      "github": "https://github.com/dfns",
      "linkedin": "https://linkedin.com/company/dfnshq"
    }
  }
}